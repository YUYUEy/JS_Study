/**
 * @param {number[]} A
 * @return {number}
 */
// 我们把数组 A 中符合下列属性的任意连续子数组 B 称为 “山脉”：

//B.length >= 3
//存在 0 < i < B.length - 1 使得 B[0] < B[1] < ... B[i-1] < B[i] > B[i+1] > ... > B[B.length - 1]
//（注意：B 可以是 A 的任意子数组，包括整个数组 A。）

//给出一个整数数组 A，返回最长 “山脉” 的长度。

//如果不含有 “山脉” 则返回 0。
---------------------------------------------------------
var longestMountain = function(A) {
    if(A.length <3){
        return 0;
    }
    if(A.length ===3){
        if(A[0]<A[1] && A[1]> A[2]){
            return 3;
        }else{
            return 0;
        }
    }
    let lenArr =[];
    for(var i=1;i< A.length-1;i++){
        if(A[i-1]<A[i] && A[i] >A[i+1]){
            let leftIndex =0, rightIndex =0;
            while((i-1+leftIndex >=0)&& (A[i-1+leftIndex]<A[i+leftIndex])){
                leftIndex--;
            }
            while((i+1+rightIndex <A.length)&& (A[i+ rightIndex] > A[i+1+ rightIndex])){
                rightIndex++;
            }
            // console.log(A.slice(i+leftIndex,i+1+rightIndex),'---last--');
            // console.log(rightIndex -leftIndex +1,'end-------');
            lenArr.push(rightIndex -leftIndex +1);
        }
    }
    if(lenArr.length ===0){
		return 0;
	}
    return Math.max.apply(null,lenArr);
};
