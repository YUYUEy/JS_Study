    var arr = ['element1', 'element2', 'element3'];
****************************************************************************************************************************
    for (var i = 0, len = arr.length; i < len; i++) {
        console.log(arr[i]);
    }

    // element1
    // element2
    // element3
****************************************************************************************************************************

****************************************************************************************************************************
    var arr = ['element1', 'element2', 'element3'];

    for (var i in arr) {
        console.log(arr[i]);
    }

    // element1
    // element2
    // element3

****************************************************************************************************************************
    var obj = {
        a: 1,
        b: 1,
        c: 1
    };

    for (let attr in obj) {
        console.log(attr, obj[attr]);
    }

    // a 1
    // b 1
    // c 1

****************************************************************************************************************************
    var str = 'I am a handsome boy!';

    for (var i in str) {
        console.log(str[i]);
    }


****************************************************************************************************************************
    var father = {
        fatherAttr: 1
    };

    // 以father为原型创建对象实例instance
    var instance = Object.create(father);

    instance.a = 1;
    instance.b = 1;
    instance.c = 1;

    for (var attr in instance) {
        console.log(attr, instance[attr]);
    }

    // a 1
    // b 1
    // c 1
    // fatherAttr 1

    // 获取instance实例的自有属性名
    console.log(Object.getOwnPropertyNames(instance));

    // ["a", "b", "c"]

****************************************************************************************************************************
    for (var attr in obj) {
        if (obj.hasOwnProperty(attr)) {
            // 是对象的自有属性，可以尽情的玩耍了
        }
    }

****************************************************************************************************************************
    let str = 'a 𠮷 c';

    for (let char of str) {
        if (char === ' ') {
            continue;
        } else {
            console.log(char);
        }
    }

    // a
    // 𠮷
    // c

****************************************************************************************************************************
    let arr = ['a', 'b', 'c'];

    // 判断其Symbol.iterator属性是否为函数
    if ((typeof arr[Symbol.iterator]).toUpperCase() === 'FUNCTION') {
        for (let element of arr) {
            console.log(element);
        }
    } else {
        console.log('此对象不可迭代');
    }

    // a
    // b
    // c

****************************************************************************************************************************
    let map = new Map([['a', 1], ['b', 1], ['c', 1], ['d', 1]]);

    // 正经操作
    for (let item of map) {
        console.log(item);
    }

    // ["a", 1]
    // ["b", 1]
    // ["c", 1]
    // ["d", 1]

    // 使用解构，方便读取值
    for (let [key, value] of map) {
        console.log(key, value);
    }

    // a 1
    // b 1
    // c 1
    // d 1

****************************************************************************************************************************
    let containers = document.querySelectorAll('.container');

    for (let node of containers) {
        // 搞事情专用注释
    }

****************************************************************************************************************************

****************************************************************************************************************************

****************************************************************************************************************************

****************************************************************************************************************************

****************************************************************************************************************************

****************************************************************************************************************************

****************************************************************************************************************************

****************************************************************************************************************************

****************************************************************************************************************************

****************************************************************************************************************************

****************************************************************************************************************************

****************************************************************************************************************************

****************************************************************************************************************************

****************************************************************************************************************************

****************************************************************************************************************************

****************************************************************************************************************************

****************************************************************************************************************************

****************************************************************************************************************************
